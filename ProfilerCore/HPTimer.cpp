#include "HPTimer.h"
#include <windows.h>

namespace Profiler
{
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
int64 GetTime()
{
	LARGE_INTEGER largeInteger;
	QueryPerformanceCounter( &largeInteger );
	return largeInteger.QuadPart;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
int64 GetFrequency()
{
	LARGE_INTEGER frequency;
	QueryPerformanceFrequency(&frequency);
	return frequency.QuadPart;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
int64 GetTimeMilliSeconds()
{
	LARGE_INTEGER largeInteger;
	QueryPerformanceCounter( &largeInteger );
	return ( largeInteger.QuadPart * int64(1000) ) / GetFrequency();
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
int64 GetTimeMicroSeconds()
{
	LARGE_INTEGER largeInteger;
	QueryPerformanceCounter( &largeInteger );
	return ( largeInteger.QuadPart * int64(1000000) ) / GetFrequency();
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void SpinSleep(uint32 microSeconds)
{
	int64 time = GetTimeMicroSeconds() + microSeconds;
	while(GetTimeMicroSeconds() < time)
	{
		Sleep(0);
	}
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
}