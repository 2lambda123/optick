#pragma once

#include "Concurrency.h"
#include "Message.h"

namespace Profiler
{
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
class Socket;
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
class Server
{
	InputDataStream networkStream;

	static const int BIFFER_SIZE = 1024;
	char buffer[BIFFER_SIZE];

	std::auto_ptr<Socket> socket;

	CriticalSection lock;

	static Server instance;
	Server( short port );
public:
	bool Connect();

	void Send(DataResponse::Type type, OutputDataStream& stream = OutputDataStream::Empty);
	void Update();

	static Server &Get() { return instance; }
};
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
}