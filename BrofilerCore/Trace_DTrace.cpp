#if __APPLE_CC__

#include "Trace.h"

#if BRO_ENABLE_TRACING

#include <array>
#include <vector>
#include "Core.h"

namespace Brofiler
{

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
class DTrace : public Trace
{
	bool isActive;
public:

    DTrace();
    
    virtual CaptureStatus::Type Start(int mode, const ThreadList& threads) override;
	virtual bool Stop() override;
};
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
DTrace g_DTrace;
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
DTrace::DTrace() : isActive(false)
{
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
CaptureStatus::Type DTrace::Start(int mode, const ThreadList& threads)
{
	if (!isActive) 
	{

		
		isActive = true;
	}

	return CaptureStatus::OK;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
bool DTrace::Stop()
{
	if (!isActive)
	{
		return false;
	}

	isActive = false;

	if (!Trace::Stop())
	{
		return false;
	}

    return true;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
Trace* Trace::Get()
{
	return &g_DTrace;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
}

#endif //BRO_ENABLE_TRACING
#endif //__APPLE_CC__
